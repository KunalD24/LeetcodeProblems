/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
struct TreeNode* createNode(int val)
{
    struct TreeNode* node = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    node->val = val;
    node->left = NULL;
    node->right = NULL;
    return node;
}
void inorder(struct TreeNode* root, int* arr, int* idx) 
{
    if (!root) return;
    inorder(root->left, arr, idx);
    arr[(*idx)++] = root->val;
    inorder(root->right, arr, idx);
}
struct TreeNode* buildBalanced(int* arr, int start, int end) {
    if (start > end) return NULL;
    int mid = (start + end) / 2;
    struct TreeNode* root = createNode(arr[mid]);
    root->left = buildBalanced(arr, start, mid - 1);
    root->right = buildBalanced(arr, mid + 1, end);
    return root;
}

struct TreeNode* balanceBST(struct TreeNode* root) {
    if (!root) return NULL;

    int* arr = (int*)malloc(10005 * sizeof(int)); 
    int idx = 0;

    
    inorder(root, arr, &idx);

    
    struct TreeNode* balanced = buildBalanced(arr, 0, idx - 1);

    free(arr); 
    return balanced;
}